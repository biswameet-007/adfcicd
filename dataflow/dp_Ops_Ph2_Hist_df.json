{
	"name": "dp_Ops_Ph2_Hist_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OrgSiteRefRd",
						"type": "DatasetReference"
					},
					"name": "OpsRead"
				},
				{
					"dataset": {
						"referenceName": "OrgSiteRefRd",
						"type": "DatasetReference"
					},
					"name": "WoRead"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SinkOperationLd3",
						"type": "DatasetReference"
					},
					"name": "sinkOpsupd"
				}
			],
			"transformations": [
				{
					"name": "sortOps"
				},
				{
					"name": "sortWo"
				},
				{
					"name": "joinOps"
				},
				{
					"name": "selectOps"
				},
				{
					"name": "alterRowOps"
				}
			],
			"scriptLines": [
				"source(output(",
				"          WONUM as string,",
				"          SITE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT DISTINCT WONUM,SITE_ID FROM MXMDW.OPERATION',",
				"     format: 'query',",
				"     staged: true) ~> OpsRead",
				"source(output(",
				"          WORKORDER_ID as integer,",
				"          WONUM as string,",
				"          SITE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT WORKORDER_ID,WONUM,SITE_ID FROM MXMDW.WORKORDER',",
				"     format: 'query',",
				"     staged: true) ~> WoRead",
				"OpsRead sort(asc(WONUM, true),",
				"     asc(SITE_ID, true),",
				"     partitionBy('hash', 2,",
				"          WONUM,",
				"          SITE_ID",
				"     )) ~> sortOps",
				"WoRead sort(asc(WONUM, false),",
				"     asc(SITE_ID, false),",
				"     partitionBy('hash', 2,",
				"          WONUM,",
				"          SITE_ID",
				"     )) ~> sortWo",
				"sortOps, sortWo join(OpsRead@WONUM == WoRead@WONUM",
				"     && OpsRead@SITE_ID == WoRead@SITE_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'both')~> joinOps",
				"joinOps select(mapColumn(",
				"          WONUM = OpsRead@WONUM,",
				"          SITE_ID = OpsRead@SITE_ID,",
				"          WORKORDER_ID",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOps",
				"selectOps alterRow(updateIf(1==1),",
				"     partitionBy('hash', 1)) ~> alterRowOps",
				"alterRowOps sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OPERATION_ID as integer,",
				"          WONUM as string,",
				"          PARENT as string,",
				"          GOVTWONUM as string,",
				"          ORGANIZATION_ID as integer,",
				"          SITE_ID as integer,",
				"          LOCATION_ID as integer,",
				"          ASSET_ID as integer,",
				"          PERSON_ID as integer,",
				"          JP_ID as integer,",
				"          PERSON_GROUP_ID as integer,",
				"          STATUS as string,",
				"          WORKTYPE as string,",
				"          TASKID as integer,",
				"          ISTASK as integer,",
				"          DESCRIPTION as string,",
				"          PLUSCJREVNUM as integer,",
				"          WOPRIORITY as string,",
				"          WO_CHANGEDATE as timestamp,",
				"          WO_STATUS_CHANGEDATE as timestamp,",
				"          WO_STATUS_CHANGEBY as string,",
				"          STATUSDATE as timestamp,",
				"          PMDUEDATE as timestamp,",
				"          TARGSTARTDATE as timestamp,",
				"          TARGCOMPDATE as timestamp,",
				"          REPORTDATE as timestamp,",
				"          ACTLABHRS as decimal(18,9),",
				"          ACTSTART as timestamp,",
				"          ACTFINISH as timestamp,",
				"          ACTINTLABHRS as decimal(18,9),",
				"          ESTDUR as decimal(18,9),",
				"          WOGROUP as string,",
				"          PERSON_GROUP as string,",
				"          CAL_PMDUEDT as timestamp,",
				"          WORKTYPE_CM_PM as string,",
				"          REPORTMONTH_YEAR as string,",
				"          REPORTDATE_MONTH as string,",
				"          REPORTDATE_CM_PM as timestamp,",
				"          PLUSCFREQUENCY as integer,",
				"          PLUSCFREQUNIT as string,",
				"          PMNEXTDUEDATE as date,",
				"          PMNUM as string,",
				"          AVAILABLE_MANHOUR as integer,",
				"          PARENT_ACTLABHRS as decimal(18,9),",
				"          SNAPSHOT_DATE as timestamp,",
				"          CURRENT_RECORD_IND as integer,",
				"          EFFECTIVE_DT as timestamp,",
				"          STATUS_FLAG as integer,",
				"          WORKORDER_ID as integer,",
				"          ACTLABHRS_HHMM as string,",
				"          ACTINTLABHRS_HHMM as string,",
				"          ESTDUR_HHMM as string,",
				"          PARENT_ACTLABHRS_HHMM as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['WONUM','SITE_ID'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          WONUM,",
				"          SITE_ID,",
				"          WORKORDER_ID",
				"     )) ~> sinkOpsupd"
			]
		}
	}
}